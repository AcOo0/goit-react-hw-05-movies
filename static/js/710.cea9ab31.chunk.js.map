{"version":3,"file":"static/js/710.cea9ab31.chunk.js","mappings":"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","sources":["api/movies.js","webpack://react-homework-template/./src/pages/MoviesCastPage/movies-cast-page.module.css?4e31","pages/MoviesCastPage/MoviesCastPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\"\n})\n\nconst API_KEY = \"8323aaa3771e77a469d4a3a8d141dffe\";\n\nexport const getAllMovies = () => {\n    return instance.get(\"/trending/movie/day\", {\n        params: {\n            api_key: API_KEY,\n        }\n    })\n}\n\nexport const searchMovies = (query, page = 1) => {\n    return instance.get(\"/search/movie\", {\n        params: {\n            api_key: API_KEY,\n            query,\n            page,\n        }\n    })\n}\n\nexport const getMovieDetail = id => {\n    return instance.get(`/movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n        }\n    })\n}\n\nexport const getMovieCredits = id => {\n    return instance.get(`/movie/${id}/credits`, {\n        params: {\n            api_key: API_KEY,\n        }\n    })\n}\n\nexport const getMovieReview = id => {\n    return instance.get(`/movie/${id}/reviews`, {\n        params: {\n            api_key: API_KEY,\n        }\n    })\n}","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"movies-cast-page_li__VG61t\",\"castWrap\":\"movies-cast-page_castWrap__NnDVz\"};","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nimport { getMovieCredits } from \"api/movies\";\nimport { Loader } from \"components/Loader/Loader\";\n\nimport styles from \"./movies-cast-page.module.css\"\n\nconst MoviesCastPage = () => {\n    const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200';\n\n    const [cast, setCast] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        if (!id) {\n            return;\n        }\n        const fetchCast = async () => {\n            try {\n                setLoading(true);\n                const { data } = await getMovieCredits(id);                \n                setCast(data.cast ? data.cast : []);\n            }\n            catch (error) {\n                setError(error.message)\n            }\n            finally {\n                setLoading(false)\n            }\n        }\n        \n        fetchCast();\n    }, [id]);\n\n    if (cast.length === 0) {\n        return <p>Sorry we don't have any cast for this movie!</p>;\n    };\n\n    const elements = cast.map(({ id, profile_path, name, character }) => (\n        <li className={styles.li} key={id}>\n            {profile_path && (\n                <img src={`${IMAGE_BASE_URL}${profile_path}`} alt={name} loading=\"lazy\" />\n            )}\n            <p>{name}</p>\n            <p>{character}</p>\n        </li>\n    ));\n\n    const isCast = Boolean(cast.length);\n\n    return (\n        <>\n            {error && <p>{error}</p>}\n            {loading && <Loader />}\n            {isCast && <div className={styles.castWrap}>\n                {elements}\n            </div>\n            }\n        </>        \n    )\n}\n\nexport default MoviesCastPage;"],"names":["instance","axios","baseURL","API_KEY","getAllMovies","get","params","api_key","searchMovies","query","page","arguments","length","undefined","getMovieDetail","id","concat","getMovieCredits","getMovieReview","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useParams","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getMovieCredit","data","_context","prev","next","sent","t0","message","finish","stop","apply","_jsx","children","elements","map","_ref2","profile_path","name","character","_jsxs","className","styles","src","alt","isCast","Boolean","_Fragment","Loader"],"sourceRoot":""}